function GSM=AssemblingModifiedStiffnessMatrixNEW(beams,beamlength,nodecoordinates,nnodes,nbeams,nsize)

global Symbway 
global nsize
if Symbway==0
    GSM=zeros(3*nnodes,nsize);
else
    GSM=sym(zeros(3*nnodes,nsize));
end

%--- AssemblingStandardStiffnessMatrix;
for beam=1:nbeams
    sM=ElementalMStiffMatrix(beamlength(beam),nodecoordinates(beams(beam,1),1),nodecoordinates(beams(beam,1),2),nodecoordinates(beams(beam,2),1),nodecoordinates(beams(beam,2),2));
    GSM(3*beams(beam,1)-2:3*beams(beam,1),16*(beam-1)+1:16*(beam-1)+8)=...
        GSM(3*beams(beam,1)-2:3*beams(beam,1),16*(beam-1)+1:16*(beam-1)+8)+sM(1:3,1:8);
    
    GSM(3*beams(beam,1)-2:3*beams(beam,1),16*(beam-1)+9:16*(beam-1)+16)=...
        GSM(3*beams(beam,1)-2:3*beams(beam,1),16*(beam-1)+9:16*(beam-1)+16)+sM(1:3,9:16);
    
    GSM(3*beams(beam,2)-2:3*beams(beam,2),16*(beam-1)+1:16*(beam-1)+8)=...
        GSM(3*beams(beam,2)-2:3*beams(beam,2),16*(beam-1)+1:16*(beam-1)+8)+sM(4:6,1:8);
    
    GSM(3*beams(beam,2)-2:3*beams(beam,2),16*(beam-1)+9:16*(beam-1)+16)=...
        GSM(3*beams(beam,2)-2:3*beams(beam,2),16*(beam-1)+9:16*(beam-1)+16)+sM(4:6,9:16);
end

function mm=ElementalMStiffMatrix(L,X1,Y1,X2,Y2)

cosalpha=(X2-X1)/sqrt((X2-X1)^2+(Y2-Y1)^2);
sinalpha=(Y2-Y1)/sqrt((X2-X1)^2+(Y2-Y1)^2);

%             %--- Esfuerzo axil (EA)
MEAu1=[             cosalpha^2/L; -(cosalpha*sinalpha)/L; 0;            -cosalpha^2/L;  (cosalpha*sinalpha)/L; 0];
MEAv1=[ -(cosalpha*sinalpha)/L;             sinalpha^2/L; 0;  (cosalpha*sinalpha)/L;            -sinalpha^2/L; 0];
MEAu2=[            -cosalpha^2/L;  (cosalpha*sinalpha)/L; 0;             cosalpha^2/L; -(cosalpha*sinalpha)/L; 0];
MEAv2=[  (cosalpha*sinalpha)/L;            -sinalpha^2/L; 0; -(cosalpha*sinalpha)/L;             sinalpha^2/L; 0];

%--- Esfuerzo flector (EI)
MEIu1=[           (12*sinalpha^2)/L^3;  (12*cosalpha*sinalpha)/L^3;  (6*sinalpha)/L^2;          -(12*sinalpha^2)/L^3; -(12*cosalpha*sinalpha)/L^3;  (6*sinalpha)/L^2];
MEIv1=[  (12*cosalpha*sinalpha)/L^3;           (12*cosalpha^2)/L^3;  (6*cosalpha)/L^2; -(12*cosalpha*sinalpha)/L^3;          -(12*cosalpha^2)/L^3;  (6*cosalpha)/L^2];
MEIw1=[              (6*sinalpha)/L^2;              (6*cosalpha)/L^2;                 4/L;             -(6*sinalpha)/L^2;             -(6*cosalpha)/L^2;                 2/L];
MEIu2=[          -(12*sinalpha^2)/L^3; -(12*cosalpha*sinalpha)/L^3; -(6*sinalpha)/L^2;           (12*sinalpha^2)/L^3;  (12*cosalpha*sinalpha)/L^3; -(6*sinalpha)/L^2];
MEIv2=[ -(12*cosalpha*sinalpha)/L^3;          -(12*cosalpha^2)/L^3; -(6*cosalpha)/L^2;  (12*cosalpha*sinalpha)/L^3;           (12*cosalpha^2)/L^3; -(6*cosalpha)/L^2];
MEIw2=[              (6*sinalpha)/L^2;              (6*cosalpha)/L^2;                 2/L;             -(6*sinalpha)/L^2;             -(6*cosalpha)/L^2;                 4/L];

%--- Esfuerzo cortante (EIQ)
MEIQu1=[          -(12*sinalpha^2)/L^3; -(12*cosalpha*sinalpha)/L^3; -(6*sinalpha)/L^2;           (12*sinalpha^2)/L^3;  (12*cosalpha*sinalpha)/L^3; -(6*sinalpha)/L^2];
MEIQv1=[ -(12*cosalpha*sinalpha)/L^3;          -(12*cosalpha^2)/L^3; -(6*cosalpha)/L^2;  (12*cosalpha*sinalpha)/L^3;           (12*cosalpha^2)/L^3; -(6*cosalpha)/L^2];
MEIQw1=[             -(6*sinalpha)/L^2;             -(6*cosalpha)/L^2;                -3/L;              (6*sinalpha)/L^2;              (6*cosalpha)/L^2;                -3/L];
MEIQu2=[           (12*sinalpha^2)/L^3;  (12*cosalpha*sinalpha)/L^3;  (6*sinalpha)/L^2;          -(12*sinalpha^2)/L^3; -(12*cosalpha*sinalpha)/L^3;  (6*sinalpha)/L^2];
MEIQv2=[  (12*cosalpha*sinalpha)/L^3;           (12*cosalpha^2)/L^3;  (6*cosalpha)/L^2; -(12*cosalpha*sinalpha)/L^3;          -(12*cosalpha^2)/L^3;  (6*cosalpha)/L^2];
MEIQw2=[             -(6*sinalpha)/L^2;             -(6*cosalpha)/L^2;                -3/L;              (6*sinalpha)/L^2;              (6*cosalpha)/L^2;                -3/L];

mm=[MEAu1 MEIu1 MEAv1 MEIv1 MEIw1 MEIQu1 MEIQv1 MEIQw1 MEAu2 MEIu2 MEAv2 MEIv2 MEIw2 MEIQu2 MEIQv2 MEIQw2];
